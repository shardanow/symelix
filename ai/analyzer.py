from openai import AsyncOpenAI
from config import OPENAI_API_KEY

client = AsyncOpenAI(api_key=OPENAI_API_KEY)

def format_weather(data: dict) -> str:
    if not data:
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ."
    
    # Create a safe dictionary access method with defaults
    def safe_get(dictionary, keys, default="–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"):
        """Safely get nested values from a dictionary with a default value if missing"""
        if not dictionary:
            return default
            
        current = dictionary
        for key in keys:
            if isinstance(current, dict) and key in current:
                current = current[key]
            else:
                return default
        return current
    
    # Build weather description with safe access to all fields
    weather_parts = []
    
    # Weather code
    weather_code = safe_get(data, ['weather_code'], "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    weather_parts.append(f"–í–æ–∑–º–æ–∂–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ –¥–Ω—è: {weather_code}")
    
    # Temperature
    temp_min = safe_get(data, ['temperature', 'min'], "N/A")
    temp_max = safe_get(data, ['temperature', 'max'], "N/A") 
    temp_avg = safe_get(data, ['temperature', 'avg'], "N/A")
    weather_parts.append(f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: –æ—Ç {temp_min}¬∞C –¥–æ {temp_max}¬∞C, —Å—Ä–µ–¥–Ω—è—è {temp_avg}¬∞C")
    
    # Pressure
    pressure = safe_get(data, ['pressure', 'avg'], "N/A")
    weather_parts.append(f"–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –≥–ü–∞")
    
    # Humidity
    humidity = safe_get(data, ['humidity', 'avg'], "N/A")
    weather_parts.append(f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%")
    
    # Wind
    wind = safe_get(data, ['wind', 'avg'], "N/A")
    weather_parts.append(f"–í–µ—Ç–µ—Ä: {wind} –º/—Å")
    
    # UV Index
    uv_index = safe_get(data, ['uv_index'], "N/A")
    weather_parts.append(f"UV-–∏–Ω–¥–µ–∫—Å: {uv_index}")
    
    return ". ".join(weather_parts) + "."

def format_geomagnetic(data: dict | None) -> str:
    if not data or "avg" not in data or "max" not in data:
        return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ –≥–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."
    return f"K-–∏–Ω–¥–µ–∫—Å –≥–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: —Å—Ä–µ–¥–Ω–∏–π {data['avg']}, –º–∞–∫—Å–∏–º—É–º {data['max']}."


async def analyze_day(
    mood_entries: list[dict] | None = None,  # [{"mood": "üòä", "comment": "—É—Å—Ç–∞–ª"}, ...]
    habit_entries: list[dict] | None = None,  # [{"habit": "üíß –í–æ–¥–∞", "comment": "–≤—ã–ø–∏–ª —Ç–æ–ª—å–∫–æ –≤–µ—á–µ—Ä–æ–º"}, ...]
    health_data: list[dict] | None = None,  # [{"energy_level": 8, "headache": False, "sleep_hours": 7.5, "comment": "–≤—Å—ë —Ö–æ—Ä–æ—à–æ"}, ...]
    weather_today: dict | None = None,  # {"temperature": {...}, "humidity": {...}, ...}
    weather_tomorrow: dict | None = None,  # {"temperature": {...}, "humidity": {...}, ...}
    geo_today: dict | None = None,  # {"avg": 3, "max": 5}
    geo_tomorrow: dict | None = None,  # {"avg": 2, "max": 4}
) -> str:
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —ç–º–æ—Ü–∏–∏
    moods_text = []
    for m in mood_entries:
        mood_name = m["mood"]
        comment = m["comment"]
        if comment:
            moods_text.append(f"{mood_name} ({comment})")
        else:
            moods_text.append(mood_name)

    # –ü—Ä–∏–≤—ã—á–∫–∏
    habits_text = []
    for h in habit_entries:
        habit_name = h["habit"]
        comment = h["comment"]
        if comment:
            habits_text.append(f"{habit_name} ({comment})")
        else:
            habits_text.append(habit_name)

    # –¥–æ–±–∞–≤–∏–º –∑–¥–æ—Ä–æ–≤—å–µ:
    health_text = ""
    if health_data:
        h = health_data[-1]  # –±–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π, –µ—Å–ª–∏ –∑–∞ –¥–µ–Ω—å –±—ã–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ
        health_text = (
            f"–≠–Ω–µ—Ä–≥–∏—è: {h['energy_level']}/10, "
            f"–°–æ–Ω: {h['sleep_hours']} —á, "
            f"–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å: {'–¥–∞' if h['headache'] else '–Ω–µ—Ç'}"
        )
        if h["comment"]:
            health_text += f" ({h['comment']})"

   # –ü–æ–≥–æ–¥–∞
    weather_now = format_weather(weather_today)
    weather_next = format_weather(weather_tomorrow)

    # –ì–µ–æ–º–∞–≥–Ω–∏—Ç–∫–∞
    geo_now = format_geomagnetic(geo_today)
    geo_next = format_geomagnetic(geo_tomorrow)


    prompt = (
        f"–¢—ã - –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∑–¥–æ—Ä–æ–≤—å—é –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—é. "
        f"–¢—ã –æ–±—É—á–µ–Ω –Ω–∞ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö, –Ω–µ–π—Ä–æ–ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, —Ñ–∏–∑–∏–æ–ª–æ–≥–∏–∏ —Å–Ω–∞, –≤–ª–∏—è–Ω–∏–∏ –ø–æ–≥–æ–¥–Ω—ã—Ö –∏ –≥–µ–æ–º–∞–≥–Ω–∏—Ç–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, "
        f"–∞ —Ç–∞–∫–∂–µ –Ω–∞—É—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–∏–≤—ã—á–∫–∞—Ö –∏ –æ–±—Ä–∞–∑–µ –∂–∏–∑–Ω–∏.\n\n"

        f"–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–≤–µ—Å—Ç–∏ –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, "
        f"–≤—ã—è–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –∏ –¥–∞—Ç—å –Ω–∞–∏–±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ, –Ω–æ –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n\n"

        f"–û—Ç–≤–µ—á–∞–π —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Telegram HTML —Ä–∞–∑–º–µ—Ç–∫–∏ (–∏—Å–ø–æ–ª—å–∑—É–π <b>, <i>, —ç–º–æ–¥–∑–∏ –∏ –æ—Ç—Å—Ç—É–ø—ã).\n"
        f"–°–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ –ª–µ–≥–∫–æ —á–∏—Ç–∞–µ–º—ã–º.\n\n"

        f"üéØ <b>–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:</b>\n"
        f"üß† <b>AI-–∞–Ω–∞–ª–∏–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è</b>\n\n"

        f"üí§ <b>–°–æ–Ω:</b> ... (–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫–∞—á–µ—Å—Ç–≤–∞, –≤–ª–∏—è–Ω–∏—è)\n"
        f"üòä <b>–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ:</b> ... (–æ–±—â–∏–π —Ç—Ä–µ–Ω–¥, –≤–ª–∏—è–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä–æ–≤)\n"
        f"üå¶Ô∏è <b>–ü–æ–≥–æ–¥–∞:</b> ... (—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –¥–∞–≤–ª–µ–Ω–∏–µ, –≤–ª–∞–∂–Ω–æ—Å—Ç—å, —É—Ä–æ–≤–µ–Ω—å uv, –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ)\n"
        f"üß≤ <b>–ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b> ... (—É—Ä–æ–≤–µ–Ω—å K-–∏–Ω–¥–µ–∫—Å–∞, –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–µ –∏ –º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)\n\n"

        f"‚ö†Ô∏è <b>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è:</b>\n"
        f"- –ù–∞—É—á–Ω–æ –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –º–µ–∂–¥—É –≤—Å–µ–º–∏ —Ñ–∞–∫—Ç–æ—Ä–∞–º–∏ (—Å–æ–Ω + –ø–æ–≥–æ–¥–∞ + –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ + –ø—Ä–∏–≤—ã—á–∫–∏ –∏ —Ç.–¥.)\n"
        f"- –ï—Å–ª–∏ –≤—Å—ë –≤ –Ω–æ—Ä–º–µ - —Ç–∞–∫ –∏ —Å–∫–∞–∂–∏, —ç—Ç–æ —Ç–æ–∂–µ –≤–∞–∂–Ω–æ\n\n"

        f"üí° <b>–°–æ–≤–µ—Ç—ã –Ω–∞ –¥–µ–Ω—å:</b>\n"
        f"- –ö–æ—Ä–æ—Ç–∫–∏–µ, –ø—Ä–∏–º–µ–Ω–∏–º—ã–µ, –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ\n"
        f"- –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞—É—á–Ω—É—é –±–∞–∑—É (–Ω–æ –±–µ–∑ –ø–µ—Ä–µ–≥—Ä—É–∑–∞)\n"
        f"- –î–∞–π 3-5 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è\n\n"

        f"üìä <b>–û–±—â–∏–π –≤—ã–≤–æ–¥:</b>\n"
        f"- –û—Ü–µ–Ω–∏ –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —Å—Ç–∞–±–∏–ª—å–Ω–æ, —Å—Ä–µ–¥–Ω–µ, —Ç—Ä–µ–≤–æ–∂–Ω–æ, —Ä–µ—Å—É—Ä—Å–Ω–æ –∏ —Ç.–¥.\n"
        f"- –ü–æ–¥–¥–µ—Ä–∂–∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ. –ó–∞–≤–µ—Ä—à–∏ –¥–æ–±—Ä–æ–π —Ñ—Ä–∞–∑–æ–π —Å —ç–º–æ–¥–∑–∏\n\n"

        f"–í–æ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n"
        f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏—è: {', '.join(moods_text)}\n"
        f"–ü—Ä–∏–≤—ã—á–∫–∏: {', '.join(habits_text)}\n"
        f"–°–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ: {health_text}\n\n"
        f"–ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è: {weather_now}\n"
        f"–ü–æ–≥–æ–¥–∞ –∑–∞–≤—Ç—Ä–∞: {weather_next}\n"
        f"–ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è: {geo_now}\n"
        f"–ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞–≤—Ç—Ä–∞: {geo_next}"
    )

    # debug
    print("Prompt:", prompt)


    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ GPT-4o-mini
    response = await client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[{"role": "user", "content": prompt}],
        temperature=0.7
    )

    return response.choices[0].message.content.strip()